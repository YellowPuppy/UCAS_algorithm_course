\relax 
\providecommand\zref@newlabel[2]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {第十章\hspace  {.3em}}网络流算法}{216}}
\@writefile{lof}{\addvspace {10.0pt}}
\@writefile{lot}{\addvspace {10.0pt}}
\@writefile{toc}{\contentsline {section}{\numberline {10.1}网络流：实际问题与算法发展脉络}{216}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.1.1}概述}{216}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.1.2}网络流的简短历史}{217}}
\@writefile{lof}{\contentsline {figure}{\numberline {10.1}{\ignorespaces Soviet Railway network, 1955}}{217}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.1.3}最大流问题}{218}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.1.4}Ford-Fulkerson algorithm}{220}}
\@writefile{lof}{\contentsline {figure}{\numberline {10.2}{\ignorespaces  Lester Randolph Ford Jr. and Delbert Ray Fulkerson}}{221}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.1.5}求解最小割问题的算法的发展史}{225}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.1.6}最大流问题}{225}}
\@writefile{lof}{\contentsline {figure}{\numberline {10.3}{\ignorespaces 图1.1 求解$s\rightarrow t$可运输的最多货物}}{226}}
\@writefile{toc}{\contentsline {section}{\numberline {10.2}Ford-Fulkerson算法[1956]}{226}}
\@writefile{lof}{\contentsline {figure}{\numberline {10.4}{\ignorespaces Lester Randolph Ford Jr. and Delbert Ray Fulkerson}}{226}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.2.1}动态规划求解}{226}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.2.2}Improvement策略}{226}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.2.3}正确性证明及时间复杂性分析}{231}}
\@writefile{toc}{\contentsline {subsubsection}{增广操作将产生一个新的流}{231}}
\@writefile{toc}{\contentsline {subsubsection}{单调递增}{231}}
\@writefile{toc}{\contentsline {subsubsection}{一个平凡的上界}{231}}
\@writefile{toc}{\contentsline {subsubsection}{增广次数}{232}}
\@writefile{toc}{\contentsline {subsubsection}{一个更紧确的上界}{232}}
\@writefile{toc}{\contentsline {subsubsection}{正确性证明}{233}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.2.4}\sc  {FORD-FULKERSON}算法的缺点}{233}}
\@writefile{toc}{\contentsline {subsubsection}{整数约束}{233}}
\@writefile{toc}{\contentsline {subsubsection}{一个时间复杂度很高的实例}{237}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.2.5}\sc  {FORD-FULKERSON}算法的改进思想}{239}}
\@writefile{toc}{\contentsline {section}{\numberline {10.3}改进策略一：Scaling技术}{239}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.3.1}Scaling {\sc  Ford-Fulkerson} 算法}{239}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.3.2}Scaling技术的时间复杂度}{241}}
\@writefile{toc}{\contentsline {section}{\numberline {10.4}改进策略二：{\sc  EDMONDS-KARP} $O(m^2n)$算法}{243}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.4.1}算法的创造者}{243}}
\@writefile{lof}{\contentsline {figure}{\numberline {10.5}{\ignorespaces  Jack Edmonds, and Richard Karp }}{243}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.4.2}{\sc  EDMONDS-KARP}算法}{243}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.4.3}时间复杂性分析}{245}}
\@writefile{toc}{\contentsline {section}{\numberline {10.5}改进策略三：Dinitz算法及Dinic算法}{247}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.5.1}原始的Dinitz算法}{247}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.5.2}Dinic算法}{248}}
\@writefile{toc}{\contentsline {subsubsection}{算法简述}{248}}
\@writefile{toc}{\contentsline {subsubsection}{算法实现}{248}}
\@writefile{toc}{\contentsline {subsubsection}{算法分析}{250}}
\@writefile{toc}{\contentsline {section}{\numberline {10.6}从对偶的角度理解网络流}{251}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.6.1}最大流-最小割：对偶问题}{251}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.6.2}原始问题}{252}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.6.3}{\sc  FORD-FULKERSON}算法本质上是一个原始对偶算法}{254}}
\@writefile{toc}{\contentsline {section}{\numberline {10.7}Push-relabel算法}{255}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.7.1}Push-relabel算法简介}{255}}
\@writefile{toc}{\contentsline {subsubsection}{预流(pre-flow)}{255}}
\@writefile{toc}{\contentsline {subsubsection}{标号(label)}{256}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.7.2}Push-relabel算法描述}{256}}
\@writefile{toc}{\contentsline {subsection}{\numberline {10.7.3}Push-relabel算法实现}{260}}
\@setckpt{Chapter7_NF1}{
\setcounter{page}{262}
\setcounter{equation}{0}
\setcounter{enumi}{2}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{10}
\setcounter{section}{7}
\setcounter{subsection}{3}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{5}
\setcounter{table}{0}
\setcounter{parentequation}{0}
\setcounter{lstnumber}{6}
\setcounter{float@type}{16}
\setcounter{algorithm}{0}
\setcounter{ALC@line}{20}
\setcounter{ALC@rem}{0}
\setcounter{ALC@depth}{0}
\setcounter{subfigure}{0}
\setcounter{lofdepth}{1}
\setcounter{subtable}{0}
\setcounter{lotdepth}{1}
\setcounter{theorem}{10}
\setcounter{lemma}{1}
\setcounter{definition}{2}
\setcounter{mdf@globalstyle@cnt}{0}
\setcounter{mdfcountframes}{0}
\setcounter{mdf@env@i}{0}
\setcounter{mdf@env@ii}{0}
\setcounter{mdf@zref@counter}{1}
\setcounter{lips@count}{0}
\setcounter{lstlisting}{0}
}
